version: '3.1'

services:
  auth:
    build:
      context: .
      dockerfile: auth/Dockerfile.dev
      args:
        name: "auth"
        port: "5050"
        environment: "dev"
        service_token: "1111"
    ports:
      - "5050:5050"
    container_name: "auth"
    restart:
      unless-stopped
    env_file:
      - ../ENV/general.yaml
      - ../ENV/auth.yaml
    volumes:
      - ./auth/src:/app/backend/auth/src #(bind mount for src)
      - ./sdk:/app/backend/sdk #(bind mount for sdk)
      - ./auth/logs:/app/backend/auth/logs
      - /app/backend/auth/target #(anonymous volume for auth vendor)
    depends_on:
      - rabbit
      - redis

#  post:
#    build:
#      context: .
#      dockerfile: posts/Dockerfile
#      args:
#        app_env: "development"
#        name: "post"
#        service_token: "000000"
#        port: "3000"
#        config: "config"
#        env: "development"
#    ports:
#      - "3000:3000"
#    container_name: "guard"
#    restart:
#      unless-stopped
#    env_file:
#      - ../ENV/general.yaml
#      - ../ENV/posts.yaml
#    volumes:
#      - ./posts/src:/app/backend/posts #bind mount(for managing rebuild)
#      - ./sdk:/app/backend/sdk #bind mounts for sdk
#      #      - ./APP/BACKEND/posts/log:/app/backend/posts/log # bind mounts for logs files
#      - /app/backend/posts/target #anonymous volumes(for reusing node_modules)[doesn't survive container shutdown]

#  postgres:
#    build: ./data/postgres
#    volumes:
#      - ./data/postgres/pgdata:/var/lib/postgresql/data
#    ports:
#      - "5420:5432"
#    environment:
#      - POSTGRES_USER=tomiwa
#      - POSTGRES_PASSWORD=tomiwa
#      - PGDATA=/temp

  redis:
    build: ./data/redis
    ports:
      - "6309:6309"
    volumes:
      - ./data/redis/data:/data

  rabbit:
    build: ./data/rabbitmq
    volumes:
      - ./data/rabbitmq/data/:/var/lib/rabbitmq
      - ./data/rabbitmq/log/:/var/log/rabbitmq
    ports:
      - "5672:5672"   # for sender and consumer connections
      - "15672:15672" # for serve RabbitMQ GUI
    restart: always
